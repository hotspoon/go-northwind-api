definitions:
  models.Customer:
    properties:
      address:
        type: string
      city:
        type: string
      company_name:
        type: string
      contact_name:
        type: string
      contact_title:
        type: string
      country:
        type: string
      customer_id:
        type: string
      fax:
        type: string
      phone:
        type: string
      postal_code:
        type: string
      region:
        type: string
    type: object
  models.Employee:
    properties:
      address:
        type: string
      birth_date:
        type: string
      city:
        type: string
      country:
        type: string
      employee_id:
        type: integer
      extension:
        type: string
      first_name:
        type: string
      hire_date:
        type: string
      home_phone:
        type: string
      last_name:
        type: string
      notes:
        type: string
      photo:
        items:
          type: integer
        type: array
      photo_path:
        type: string
      postal_code:
        type: string
      region:
        type: string
      reports_to:
        type: integer
      title:
        type: string
      title_of_courtesy:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: RESTful API for Northwind database
  title: Northwind API
  version: "1.0"
paths:
  /api/v1/customers:
    get:
      description: Returns a list of all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Creates a new customer
      parameters:
      - description: Customer to create
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new customer
      tags:
      - Customers
  /api/v1/customers/{id}:
    delete:
      description: Deletes a customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a customer
      tags:
      - Customers
    get:
      description: Returns a single customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get customer by ID
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Updates an existing customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: Customer to update
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing customer
      tags:
      - Customers
  /api/v1/employees:
    get:
      description: Returns a list of all employees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Employee'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all employees
      tags:
      - Employees
    post:
      consumes:
      - application/json
      description: Creates a new employee
      parameters:
      - description: Employee to create
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Employee'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new employee
      tags:
      - Employees
  /api/v1/employees/{id}:
    delete:
      description: Deletes an employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an employee
      tags:
      - Employees
    get:
      description: Returns a single employee by ID
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get employee by ID
      tags:
      - Employees
    put:
      consumes:
      - application/json
      description: Updates an existing employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      - description: Employee to update
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/models.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Employee'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an employee
      tags:
      - Employees
swagger: "2.0"
